this.AnimatorJS=function(){let t=!1;if(!this.document.createElement("div").animate){var i=document.createElement("script");i.src="https://rawgit.com/web-animations/web-animations-js/master/web-animations.min.js",t=!0,document.head?document.head.appendChild(i):document.addEventListener("load",function(){document.head.appendChild(i)})}d.polyfill=function(i){return i&&(t=!0),t};const e=Object.defineProperty;function n(t,i){this._options=i,this._keyframes=t}function o(t,i,e){this._keyframes=t,this._options=i,this._element=e,this._Animation=null,this._currentTime=null,this._effect=null,this._finished=null,this._id="",this._playState=null,this._playbackRate=1,this._ready=!1,this._startTime=performance.now(),this._timeline=null,this._oncancel=null,this._onfinish=null,this._bind_isglobal=!1}function r(t,i){e(o.prototype,t,i)}function a(t,i){o.prototype[t]=i}n.prototype.assign=function(t){return new o(this._keyframes,this._options,t)},r("currentTime",{set:function(t){return this.set("currentTime",t)},get:function(){
return this.get("currentTime")}}),r("effect",{set:function(t){return this.set("effect",t)},get:function(){return this.get("effect")}}),r("finished",{get:function(){return this.get("finished")}}),r("id",{set:function(t){return this.set("id",t)},get:function(){return this.get("id")}}),r("pending",{get:function(){return this.get("pending")}}),r("playState",{get:function(){return this.get("playState")}}),r("playbackRate",{set:function(t){return this.set("playbackRate",t)},get:function(){return this.get("playbackRate")}}),r("ready",{get:function(){return this.get("ready")}}),r("startTime",{set:function(t){return this.set("startTime",t)},get:function(){return this.get("startTime")}}),r("timeline",{set:function(t){return this.set("timeline",t)},get:function(){return this.get("timeline")}}),r("oncancel",{set:function(t){return this.set("oncancel",t)},get:function(){return this.get("oncancel")}}),r("onfinish",{set:function(t){return this.set("onfinish",t)},get:function(){return this.get("onfinish")}}),
a("get",function(t){return this.exists()?this._Animation[t]:this["_"+t]}),a("set",function(t,i){return this.exists()?this._Animation[t]=i:this["_"+t]=i}),a("exists",function(){return!!this._Animation}),a("cancel",function(){this.exists()&&this._Animation.cancel()}),a("finish",function(){this.exists()&&this._Animation.finish()}),a("pause",function(){this.exists()&&this._Animation.pause()}),a("play",function(){this.exists()?this._Animation.play():(this._Animation=this._element.animate(this._keyframes,this._options),this._startTime=performance.now(),this._Animation.id=this._id,this._Animation.play(),this._Animation.playbackRate=this._playbackRate,this._Animation.startTime=this._startTime,this._Animation.timeline=this._timeline,this._Animation.oncancel=this._oncancel,this._Animation.onfinish=this._onfinish,this._is_bound&&this.bind(this._bind_type,this._bind))}),a("reverse",function(){this.exists()&&this._Animation.reverse()}),a("updatePlaybackRate",function(t){this.exists()&&this._Animation.updatePlaybackRate(t)
}),a("bind",function(t,i,e){var n=this;this._bind_isglobal=e,this.playbackRate=0,this._is_bound=!0,this._bind_type=t,this._bind=i,this._bound_call=function(t){n._is_bound=!0,n.exists()&&(n.currentTime=n._bind(t,n))},this._element&&this._bind_type&&this._bind_type&&!this._bound&&(this._bind_isglobal?this._element.addEventListener(t,this._bound_call):document.addEventListener(t,this._bound_call),this.play())});function s(t){this.Element=t,this.Animation=[],this.resetCurrent()}function l(t){s.prototype[t]=function(...i){return this.set(t,i.join(" ")),this}}function d(t){return new s(t)}return l("alignContent"),l("alignItems"),l("alignSelf"),l("alignmentBaseline"),l("all"),l("animation"),l("animationDelay"),l("animationDirection"),l("animationDuration"),l("animationFillMode"),l("animationIterationCount"),l("animationName"),l("animationPlayState"),l("animationTimingFunction"),l("backfaceVisibility"),l("background"),l("backgroundAttachment"),l("backgroundBlendMode"),l("backgroundClip"),l("backgroundColor"),
l("backgroundImage"),l("backgroundOrigin"),l("backgroundPosition"),l("backgroundPositionX"),l("backgroundPositionY"),l("backgroundRepeat"),l("backgroundRepeatX"),l("backgroundRepeatY"),l("backgroundSize"),l("baselineShift"),l("blockSize"),l("border"),l("borderBlockEnd"),l("borderBlockEndColor"),l("borderBlockEndStyle"),l("borderBlockEndWidth"),l("borderBlockStart"),l("borderBlockStartColor"),l("borderBlockStartStyle"),l("borderBlockStartWidth"),l("borderBottom"),l("borderBottomColor"),l("borderBottomLeftRadius"),l("borderBottomRightRadius"),l("borderBottomStyle"),l("borderBottomWidth"),l("borderCollapse"),l("borderColor"),l("borderImage"),l("borderImageOutset"),l("borderImageRepeat"),l("borderImageSlice"),l("borderImageSource"),l("borderImageWidth"),l("borderInlineEnd"),l("borderInlineEndColor"),l("borderInlineEndStyle"),l("borderInlineEndWidth"),l("borderInlineStart"),l("borderInlineStartColor"),l("borderInlineStartStyle"),l("borderInlineStartWidth"),l("borderLeft"),l("borderLeftColor"),l("borderLeftStyle"),
l("borderLeftWidth"),l("borderRadius"),l("borderRight"),l("borderRightColor"),l("borderRightStyle"),l("borderRightWidth"),l("borderSpacing"),l("borderStyle"),l("borderTop"),l("borderTopColor"),l("borderTopLeftRadius"),l("borderTopRightRadius"),l("borderTopStyle"),l("borderTopWidth"),l("borderWidth"),l("bottom"),l("boxShadow"),l("boxSizing"),l("breakAfter"),l("breakBefore"),l("breakInside"),l("bufferedRendering"),l("captionSide"),l("caretColor"),l("clear"),l("clip"),l("clipPath"),l("clipRule"),l("color"),l("colorInterpolation"),l("colorInterpolationFilters"),l("colorRendering"),l("columnCount"),l("columnFill"),l("columnGap"),l("columnRule"),l("columnRuleColor"),l("columnRuleStyle"),l("columnRuleWidth"),l("columnSpan"),l("columnWidth"),l("columns"),l("contain"),l("content"),l("counterIncrement"),l("counterReset"),l("cursor"),l("cx"),l("cy"),l("d"),l("direction"),l("display"),l("dominantBaseline"),l("emptyCells"),l("fill"),l("fillOpacity"),l("fillRule"),l("filter"),l("flex"),l("flexBasis"),l("flexDirection"),
l("flexFlow"),l("flexGrow"),l("flexShrink"),l("flexWrap"),l("float"),l("floodColor"),l("floodOpacity"),l("font"),l("fontDisplay"),l("fontFamily"),l("fontFeatureSettings"),l("fontKerning"),l("fontSize"),l("fontStretch"),l("fontStyle"),l("fontVariant"),l("fontVariantCaps"),l("fontVariantEastAsian"),l("fontVariantLigatures"),l("fontVariantNumeric"),l("fontVariationSettings"),l("fontWeight"),l("gap"),l("grid"),l("gridArea"),l("gridAutoColumns"),l("gridAutoFlow"),l("gridAutoRows"),l("gridColumn"),l("gridColumnEnd"),l("gridColumnGap"),l("gridColumnStart"),l("gridGap"),l("gridRow"),l("gridRowEnd"),l("gridRowGap"),l("gridRowStart"),l("gridTemplate"),l("gridTemplateAreas"),l("gridTemplateColumns"),l("gridTemplateRows"),l("height"),l("hyphens"),l("imageRendering"),l("inlineSize"),l("isolation"),l("justifyContent"),l("justifyItems"),l("justifySelf"),l("left"),l("letterSpacing"),l("lightingColor"),l("lineBreak"),l("lineHeight"),l("listStyle"),l("listStyleImage"),l("listStylePosition"),l("listStyleType"),l("margin"),
l("marginBlockEnd"),l("marginBlockStart"),l("marginBottom"),l("marginInlineEnd"),l("marginInlineStart"),l("marginLeft"),l("marginRight"),l("marginTop"),l("marker"),l("markerEnd"),l("markerMid"),l("markerStart"),l("mask"),l("maskType"),l("maxBlockSize"),l("maxHeight"),l("maxInlineSize"),l("maxWidth"),l("maxZoom"),l("minBlockSize"),l("minHeight"),l("minInlineSize"),l("minWidth"),l("minZoom"),l("mixBlendMode"),l("objectFit"),l("objectPosition"),l("offset"),l("offsetDistance"),l("offsetPath"),l("offsetRotate"),l("opacity"),l("order"),l("orientation"),l("orphans"),l("outline"),l("outlineColor"),l("outlineOffset"),l("outlineStyle"),l("outlineWidth"),l("overflow"),l("overflowAnchor"),l("overflowWrap"),l("overflowX"),l("overflowY"),l("overscrollBehavior"),l("overscrollBehaviorX"),l("overscrollBehaviorY"),l("padding"),l("paddingBlockEnd"),l("paddingBlockStart"),l("paddingBottom"),l("paddingInlineEnd"),l("paddingInlineStart"),l("paddingLeft"),l("paddingRight"),l("paddingTop"),l("page"),l("pageBreakAfter"),
l("pageBreakBefore"),l("pageBreakInside"),l("paintOrder"),l("perspective"),l("perspectiveOrigin"),l("placeContent"),l("placeItems"),l("placeSelf"),l("pointerEvents"),l("position"),l("quotes"),l("r"),l("resize"),l("right"),l("rowGap"),l("rx"),l("ry"),l("scrollBehavior"),l("scrollMargin"),l("scrollMarginBlock"),l("scrollMarginBlockEnd"),l("scrollMarginBlockStart"),l("scrollMarginBottom"),l("scrollMarginInline"),l("scrollMarginInlineEnd"),l("scrollMarginInlineStart"),l("scrollMarginLeft"),l("scrollMarginRight"),l("scrollMarginTop"),l("scrollPadding"),l("scrollPaddingBlock"),l("scrollPaddingBlockEnd"),l("scrollPaddingBlockStart"),l("scrollPaddingBottom"),l("scrollPaddingInline"),l("scrollPaddingInlineEnd"),l("scrollPaddingInlineStart"),l("scrollPaddingLeft"),l("scrollPaddingRight"),l("scrollPaddingTop"),l("scrollSnapAlign"),l("scrollSnapStop"),l("scrollSnapType"),l("shapeImageThreshold"),l("shapeMargin"),l("shapeOutside"),l("shapeRendering"),l("size"),l("speak"),l("src"),l("stopColor"),l("stopOpacity"),
l("stroke"),l("strokeDasharray"),l("strokeDashoffset"),l("strokeLinecap"),l("strokeLinejoin"),l("strokeMiterlimit"),l("strokeOpacity"),l("strokeWidth"),l("tabSize"),l("tableLayout"),l("textAlign"),l("textAlignLast"),l("textAnchor"),l("textCombineUpright"),l("textDecoration"),l("textDecorationColor"),l("textDecorationLine"),l("textDecorationSkipInk"),l("textDecorationStyle"),l("textIndent"),l("textOrientation"),l("textOverflow"),l("textRendering"),l("textShadow"),l("textSizeAdjust"),l("textTransform"),l("textUnderlinePosition"),l("top"),l("touchAction"),l("transform"),l("transformBox"),l("transformOrigin"),l("transformStyle"),l("transition"),l("transitionDelay"),l("transitionDuration"),l("transitionProperty"),l("transitionTimingFunction"),l("unicodeBidi"),l("unicodeRange"),l("userSelect"),l("userZoom"),l("vectorEffect"),l("verticalAlign"),l("visibility"),l("webkitAlignContent"),l("webkitAlignItems"),l("webkitAlignSelf"),l("webkitAnimation"),l("webkitAnimationDelay"),l("webkitAnimationDirection"),
l("webkitAnimationDuration"),l("webkitAnimationFillMode"),l("webkitAnimationIterationCount"),l("webkitAnimationName"),l("webkitAnimationPlayState"),l("webkitAnimationTimingFunction"),l("webkitAppRegion"),l("webkitAppearance"),l("webkitBackfaceVisibility"),l("webkitBackgroundClip"),l("webkitBackgroundOrigin"),l("webkitBackgroundSize"),l("webkitBorderAfter"),l("webkitBorderAfterColor"),l("webkitBorderAfterStyle"),l("webkitBorderAfterWidth"),l("webkitBorderBefore"),l("webkitBorderBeforeColor"),l("webkitBorderBeforeStyle"),l("webkitBorderBeforeWidth"),l("webkitBorderBottomLeftRadius"),l("webkitBorderBottomRightRadius"),l("webkitBorderEnd"),l("webkitBorderEndColor"),l("webkitBorderEndStyle"),l("webkitBorderEndWidth"),l("webkitBorderHorizontalSpacing"),l("webkitBorderImage"),l("webkitBorderRadius"),l("webkitBorderStart"),l("webkitBorderStartColor"),l("webkitBorderStartStyle"),l("webkitBorderStartWidth"),l("webkitBorderTopLeftRadius"),l("webkitBorderTopRightRadius"),l("webkitBorderVerticalSpacing"),
l("webkitBoxAlign"),l("webkitBoxDecorationBreak"),l("webkitBoxDirection"),l("webkitBoxFlex"),l("webkitBoxOrdinalGroup"),l("webkitBoxOrient"),l("webkitBoxPack"),l("webkitBoxReflect"),l("webkitBoxShadow"),l("webkitBoxSizing"),l("webkitClipPath"),l("webkitColumnBreakAfter"),l("webkitColumnBreakBefore"),l("webkitColumnBreakInside"),l("webkitColumnCount"),l("webkitColumnGap"),l("webkitColumnRule"),l("webkitColumnRuleColor"),l("webkitColumnRuleStyle"),l("webkitColumnRuleWidth"),l("webkitColumnSpan"),l("webkitColumnWidth"),l("webkitColumns"),l("webkitFilter"),l("webkitFlex"),l("webkitFlexBasis"),l("webkitFlexDirection"),l("webkitFlexFlow"),l("webkitFlexGrow"),l("webkitFlexShrink"),l("webkitFlexWrap"),l("webkitFontFeatureSettings"),l("webkitFontSizeDelta"),l("webkitFontSmoothing"),l("webkitHighlight"),l("webkitHyphenateCharacter"),l("webkitJustifyContent"),l("webkitLineBreak"),l("webkitLineClamp"),l("webkitLocale"),l("webkitLogicalHeight"),l("webkitLogicalWidth"),l("webkitMarginAfter"),l("webkitMarginAfterCollapse"),
l("webkitMarginBefore"),l("webkitMarginBeforeCollapse"),l("webkitMarginBottomCollapse"),l("webkitMarginCollapse"),l("webkitMarginEnd"),l("webkitMarginStart"),l("webkitMarginTopCollapse"),l("webkitMask"),l("webkitMaskBoxImage"),l("webkitMaskBoxImageOutset"),l("webkitMaskBoxImageRepeat"),l("webkitMaskBoxImageSlice"),l("webkitMaskBoxImageSource"),l("webkitMaskBoxImageWidth"),l("webkitMaskClip"),l("webkitMaskComposite"),l("webkitMaskImage"),l("webkitMaskOrigin"),l("webkitMaskPosition"),l("webkitMaskPositionX"),l("webkitMaskPositionY"),l("webkitMaskRepeat"),l("webkitMaskRepeatX"),l("webkitMaskRepeatY"),l("webkitMaskSize"),l("webkitMaxLogicalHeight"),l("webkitMaxLogicalWidth"),l("webkitMinLogicalHeight"),l("webkitMinLogicalWidth"),l("webkitOpacity"),l("webkitOrder"),l("webkitPaddingAfter"),l("webkitPaddingBefore"),l("webkitPaddingEnd"),l("webkitPaddingStart"),l("webkitPerspective"),l("webkitPerspectiveOrigin"),l("webkitPerspectiveOriginX"),l("webkitPerspectiveOriginY"),l("webkitPrintColorAdjust"),
l("webkitRtlOrdering"),l("webkitRubyPosition"),l("webkitShapeImageThreshold"),l("webkitShapeMargin"),l("webkitShapeOutside"),l("webkitTapHighlightColor"),l("webkitTextCombine"),l("webkitTextDecorationsInEffect"),l("webkitTextEmphasis"),l("webkitTextEmphasisColor"),l("webkitTextEmphasisPosition"),l("webkitTextEmphasisStyle"),l("webkitTextFillColor"),l("webkitTextOrientation"),l("webkitTextSecurity"),l("webkitTextSizeAdjust"),l("webkitTextStroke"),l("webkitTextStrokeColor"),l("webkitTextStrokeWidth"),l("webkitTransform"),l("webkitTransformOrigin"),l("webkitTransformOriginX"),l("webkitTransformOriginY"),l("webkitTransformOriginZ"),l("webkitTransformStyle"),l("webkitTransition"),l("webkitTransitionDelay"),l("webkitTransitionDuration"),l("webkitTransitionProperty"),l("webkitTransitionTimingFunction"),l("webkitUserDrag"),l("webkitUserModify"),l("webkitUserSelect"),l("webkitWritingMode"),l("whiteSpace"),l("widows"),l("width"),l("willChange"),l("wordBreak"),l("wordSpacing"),l("wordWrap"),l("writingMode"),l("x"),
l("y"),l("zIndex"),l("zoom"),s.prototype.resetCurrent=function(){this.current={}},s.prototype.next=function(){return this.Animation.push(this.current),this.resetCurrent(),this},s.prototype.set=function(t,i){if(void 0!==i){this.current[t]=i;for(var e=0;e<this.Animation.length;e++)this.Animation[e][t]||(this.Animation[e][t]="auto")}},s.prototype.get=function(t){return this.current[t]||""},s.prototype.reset=function(){return this.Animation=[],this.resetCurrent(),this},s.prototype.valid=function(t){return void 0!=t},s.prototype.transform=function(t,i,e){var n=[];return this.valid(t)&&n.push("translateX("+t+"px)"),this.valid(i)&&n.push("translateY("+i+"px)"),this.valid(e)&&n.push("translateZ("+e+"px)"),this.set("transform",((this.get("transform")||"")+" "+n.join(" ")).trim()),this},s.prototype.rotate=function(t,i,e){var n=[];return this.valid(t)&&(this.valid(i)||this.valid(e)?n.push("rotateX("+t+"deg)"):n.push("rotate("+t+"deg)")),this.valid(i)&&n.push("rotateY("+i+"deg)"),
this.valid(e)&&n.push("rotateZ("+e+"deg)"),this.set("transform",((this.get("transform")||"")+" "+n.join(" ")).trim()),this},s.prototype.duration=function(t){return this.requireDuration=!0,this.set("duration",t),this},s.prototype.build=function(t){if(void 0===t&&(t=1e3),Object.keys(this.current).length>0){let t=Object.keys(this.current);for(let i=0;i<t.length;i++)void 0===this.current[t[i]]&&delete this.current[t[i]];this.Animation.push(this.current),this.resetCurrent()}return this.updateDurationsForPlaying(t)},s.prototype.start=function(t,i){void 0===i&&(i={});var e=this.build(t);return i.duration=t,this.itterationCount&&(i.iterations=this.itterationCount),this.Element?this.AnimationInstance=this.Element.animate(e,i):this.AnimationInstance=new n(e,i),this.AnimationInstance},s.prototype.render=function(t,i){void 0===t&&(t=1e3),void 0===i&&(i={});var e=this.build(t);return i.duration=t,this.itterationCount&&(i.iterations=this.itterationCount),
this.Element?this.AnimationInstance=new o(e,i,this.Element):this.AnimationInstance=new n(e,i),this.AnimationInstance},s.prototype.updateDurationsForPlaying=function(t){var i=0,e=Object.assign([],this.Animation);this.durationsCalculated=!0;for(var n=0;n<e.length;n++){var o=t/e.length-1;if(this.requireDuration&&!(o=e[n].duration))throw new Error("missing segment duration, if duration is used all segments need to have a duration");0===n&&e.length>1?(t-=e[1].duration||0,e[0].duration=0):n===e.length-1?e[n].duration=t-i:e[n].duration=(i+=o)/t}return e},s.prototype.easing=function(t){return this.set("easing",t),this.set("animationTimingFunction",t),this},s.prototype.repeat=function(t){return this.itterationCount=t,this},s.prototype.bind=function(t,i){var e=this.render();return e.bind(t,i),e},s.prototype.css=function(t){for(var i=0,e=e=t.split(";");i<e.length;i++){var n=e[i],o=n.split(":",2)[0],r=n.split(":",2)[1];""!=o&&this.set(o,r.trim())}return this},s.prototype.raw=function(t){
for(var i=Object.keys(t),e=0;e<i.length;e++)this.set(i[e],t[i[e]]);return this},s.prototype.append=function(t){for(var i=0;i<t.Animation.length;i++)this.Animation.push(t.Animation[i]);return this},s.prototype.scale=function(t){if(this.valid(t)){var i="translateX("+t+"px)";this.set("transform",(this.get("transform")||"")+" "+i.trim())}else conso.wa("invalid size for scale");return this},e(Element.prototype,"AnimatorJS",{value:function(){return this.AnimatorJsInstance?this.AnimatorJsInstance:(this.AnimatorJsInstance=new s(this),this.AnimatorJsInstance)}}),d}();