AnimatorJS.dom=function(){class t extends HTMLElement{constructor(){super(),this.animator=AnimatorJS(),this.final={}}connectedCallback(){this.style.display="none",this.hidden=!0}attributeChangedCallback(t,e,i){this.final.duration=+i}static get observedAttributes(){return["duration"]}get animation(){if(this._animation)return this._animation;let t=Array.from(this.children);for(let e=0;e<t.length;e++)this.animator.append(t[e].get_animation());return this._animation||(this._animation=this.animator.render())}}customElements.define("animatorjs-animation",t);class e extends HTMLElement{constructor(){super(),this._attributes={}}attributeChangedCallback(t,e,i){this._attributes[t]=i}static get observedAttributes(){return["style","easing","duration"]}get_animation(){this.animator=AnimatorJS();for(let t in this._attributes){let e=this._attributes[t];switch(t){case"style":this.animator.css(e);break;case"easing":this.animator.easing(e);break;case"duration":this.animator.duration(e);break;default:this.animator.set(t,e)}}
let t=Array.from(this.children);for(let e=0;e<t.length;e++){let i=t[e].getAttribute("name"),a=t[e].getAttribute("value");this.animator.set(i,a)}return this.animator.next()}}customElements.define("animatorjs-keyframe",e);class i extends HTMLElement{constructor(){super()}}return customElements.define("animatorjs-option",i),{AnimatorJSAnimation:t,AnimatorJSKeyframe:e,AnimatorJSOption:i}}();